# .github/workflows/release.yml
name: Create Release

on:
  workflow_dispatch: # Allows manual triggering
  push:
    tags:
      - 'v*'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: read

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      RELEASE_UPLOAD_URL: ${{ steps.create_release.outputs.upload_url }}
      CHANGELOG: ${{ steps.generate_changelog.outputs.changelog }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for changelog generation

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Decode google-services.json
        env:
          GOOGLE_SERVICES_JSON_BASE64: ${{ secrets.GOOGLE_SERVICES_JSON_BASE64 }}
        run: |
          echo "$GOOGLE_SERVICES_JSON_BASE64" | base64 --decode > app/google-services.json

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Generate Changelog
        id: generate_changelog
        uses: mikepenz/release-changelog-builder-action@v5
        with:
          owner: mobilemobilellc
          repo: solpan
          ignorePreReleases: false
          failOnError: true
          fetchViaCommits: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare Play Store Release Notes
        run: |
          mkdir -p play_store_release_notes/en-US
          echo "${{ steps.generate_changelog.outputs.changelog }}" > play_store_release_notes/en-US/default.txt

      - name: Decode Keystore
        id: decode_keystore
        run: |
          echo "${{ secrets.SIGNING_KEYSTORE_BASE64 }}" | base64 --decode > ${{ github.workspace }}/release.keystore
        # Ensure secrets are set in GitHub: SIGNING_KEYSTORE_BASE64

      - name: Determine Version Name from Tag
        id: get_version
        run: echo "APP_VERSION_NAME=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV # Removes 'v' prefix from tag for version name

      - name: Build Release AAB
        run: ./gradlew bundleRelease -PappVersionName=${{ env.APP_VERSION_NAME }} -PappVersionCode=${{ github.run_number }}
        env:
          ANDROID_KEYSTORE_PATH: ${{ github.workspace }}/release.keystore
          ANDROID_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          ANDROID_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
          ANDROID_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          # Ensure secrets are set in GitHub: SIGNING_KEY_ALIAS, SIGNING_STORE_PASSWORD, SIGNING_KEY_PASSWORD

      - name: Build Release APK
        run: ./gradlew assembleRelease -PappVersionName=${{ env.APP_VERSION_NAME }} -PappVersionCode=${{ github.run_number }}
        env:
          ANDROID_KEYSTORE_PATH: ${{ github.workspace }}/release.keystore
          ANDROID_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          ANDROID_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
          ANDROID_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          # Ensure secrets are set in GitHub: SIGNING_KEY_ALIAS, SIGNING_STORE_PASSWORD, SIGNING_KEY_PASSWORD

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }} # Use the tag that triggered the workflow
          name: Release ${{ env.APP_VERSION_NAME }}
          body: ${{ steps.generate_changelog.outputs.changelog }}
          files: |
            app/build/outputs/bundle/release/app-release.aab
            app/build/outputs/apk/release/app-release.apk
          prerelease: ${{ contains(github.ref_name, '-alpha') || contains(github.ref_name, '-beta') || contains(github.ref_name, '-test.') }} # Mark as pre-release if tag contains -alpha, -beta or -test.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload AAB to Google Play
        if: success() && github.ref_type == 'tag'
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_JSON_KEY }}
          packageName: app.mobilemobile.solpan
          releaseFiles: app/build/outputs/bundle/release/app-release.aab
          track: ${{ (contains(github.ref_name, '-alpha') && 'alpha') || (contains(github.ref_name, '-beta') && 'beta') || (contains(github.ref_name, '-test.') && 'internal') || 'production' }}
          status: 'draft'
          whatsNewDirectory: ./play_store_release_notes/ # Use the generated release notes
